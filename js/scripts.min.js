const inittedInputs=[];function findInittedInput(t,e=!1){const s=Array.from(document.querySelectorAll(t));if(e){return inittedInputs.filter(i)||null}return inittedInputs.find(i)||null;function i(t){return s.includes(t.rootElem)}}function createElement(t,e,s){let i=document.createElement(t);return e&&(i.className=e),s&&i.insertAdjacentHTML("afterbegin",s),i}class Cookie{constructor(t){this.onOkClick=this.onOkClick.bind(this),this.onLearnMoreClick=this.onLearnMoreClick.bind(this),this.rootElem=t,this.okButton=this.rootElem.querySelector(".cookie__button--ok"),this.learnMoreButton=this.rootElem.querySelector(".cookie__link--learn-more"),this.okButton.addEventListener("click",this.onOkClick),this.learnMoreButton.addEventListener("click",this.onLearnMoreClick)}onOkClick(){this.rootElem.remove()}onLearnMoreClick(){}}class ChooseTabs{constructor(t){this.tabChange=this.tabChange.bind(this),this.rootElem=t,this.tabs=this.rootElem.querySelectorAll("[data-tab-name]"),this.tabs.forEach((t=>t.addEventListener("click",this.tabChange)))}tabChange(t){const e=t.currentTarget;this.tabs.forEach((t=>{t!==e&&t.classList.remove("active"),e.classList.add("active")}));let s=findInittedInput(".resume__rubricks");s.show();let i="";switch(e.dataset.tabName){case"tab-1":i="соискатель";default:break;case"tab-2":i="работодатель"}s.setStatus(i)}}class Rubricks{constructor(t){this.onChange=this.onChange.bind(this),this.rootElem=t,this.limit=3,this.statusSpan=this.rootElem.querySelector(".rubricks__status"),this.checkboxesItems=Array.from(this.rootElem.querySelectorAll(".checkboxs__items_item")),this.rootElem.addEventListener("change",this.onChange)}show(){this.rootElem.classList.remove("none")}onChange(t){const e=t.target;Array.isArray(this.checked)||(this.checked=[]);const s=findInittedInput("#options");function i(t){t?s.show():s.hide()}(function(){if(e.checked)if(this.checked.length<this.limit)this.checked.push(e);else{e.checked=!1;this.checked.slice(this.limit).forEach((t=>t.checked=!1)),this.checked=this.checked.slice(0,this.limit)}else this.checked=this.checked.filter((t=>t!==e))}).call(this),this.checked.length>0?i(!0):i(!1),s.setRubricks()}setStatus(t){this.statusSpan.innerHTML="",this.statusSpan.insertAdjacentText("afterbegin",t)}}class Options{constructor(t){this.rootElem=t}show(){this.rootElem.classList.remove("none")}hide(){this.rootElem.classList.add("none")}setRubricks(){const t=this.rootElem.querySelector(".rubricks-categories").querySelector("span"),e=findInittedInput(".resume__rubricks").checked||[];let s="";e.forEach(((t,e,i)=>{s+=t.value,e!=i.length-1&&(s+=", ")})),t.innerHTML=s}}let inittingSelectors=[{selector:".cookie",classInstance:Cookie},{selector:".resume__choose",classInstance:ChooseTabs},{selector:".resume__rubricks",classInstance:Rubricks},{selector:"#options",classInstance:Options}];function initInputs(){inittingSelectors.forEach((t=>{const e=t.selector,s=t.classInstance;Array.from(document.querySelectorAll(e)).filter((e=>!Boolean(inittedInputs.find((s=>s.rootElem===e&&s instanceof t.classInstance))))).forEach((t=>{inittedInputs.push(new s(t))}))}))}const inittingInputsBodyObserver=new MutationObserver((()=>{initInputs()}));inittingInputsBodyObserver.observe(document.body,{childList:!0,subtree:!0}),initInputs();class TextInput{constructor(t){this.onInput=this.onInput.bind(this),this.onFocus=this.onFocus.bind(this),this.clear=this.clear.bind(this),this.onDocumentClick=this.onDocumentClick.bind(this),this.typeNumbersOnly=this.typeNumbersOnly.bind(this),this.rootElem=t,this.input=this.rootElem.querySelector(".text-input__input"),this.clearButton=this.rootElem.querySelector(".cross"),this.isNumbersOnly=this.input.hasAttribute("data-numbers-only"),this.mask=this.input.dataset.inputMask,this.getSelectsWrap(),this.input.addEventListener("input",this.onInput),this.input.addEventListener("focus",this.onFocus),this.clearButton.addEventListener("click",this.clear),this.isNumbersOnly&&this.input.addEventListener("input",this.typeNumbersOnly),document.addEventListener("click",this.onDocumentClick),this.mask&&this.createMask()}getSelectsWrap(){this.selectsWrap=this.rootElem.querySelector(".selects-wrap"),this.selectsWrap&&(this.selectValues=Array.from(this.selectsWrap.querySelectorAll(".selects-wrap__option")),this.selectValues=this.selectValues.map((t=>({node:t,text:t.textContent||val.innerText}))),this.selectValues.forEach((t=>{t.node.addEventListener("click",(()=>{this.input.value=t.text,this.input.dispatchEvent(new Event("input"))}))})))}onInput(){this.selectsWrap&&this.highlitMatches()}onFocus(){this.rootElem.classList.add("open-selects")}highlitMatches(){const t=this.input.value.toLowerCase().trim();this.selectValues.find((e=>e.text.toLowerCase().trim()===t))?this.selectValues.forEach((t=>{t.node.classList.remove("none"),t.node.innerHTML=t.text})):this.selectValues.forEach((e=>{const s=e.text,i=s.toLowerCase().trim();if(i.includes(t)){e.node.classList.remove("none");const n=i.indexOf(t),o=n+t.length;let c=s.slice(0,n)+`<span class="highlight">${s.slice(n,o)}</span>`+s.slice(o);e.node.innerHTML=c}else e.node.classList.add("none")}))}clear(){this.input.value="",this.input.dispatchEvent(new Event("input"))}onDocumentClick(t){t.target!==this.input&&this.rootElem.classList.remove("open-selects")}typeNumbersOnly(t){const e=t.target,s=e.value;e.value=s.replace(/\D/g,"")}createMask(){i=i.bind(this),o=o.bind(this),this.regexp=new RegExp(this.mask);const t=this.mask.split(" "),e=t.map((t=>new RegExp(t))),s=t.map((t=>t.replace("\\","")));function i(t){const i=this.input.value;if("insertFromPaste"===t.inputType)return void setTimeout((()=>{let t=n(i);this.isNumbersOnly&&(t=t.replace(/[^0-9+()-]/g,"")),o(t)}),100);let c=0;for(let t=0;t<e.length;t++){const r=e[t],l=s[t].length,a=i.slice(c,c+l);if(c+=l,a&&!a.match(r)){o(n(i));break}}}function n(t){return e.forEach(((e,i)=>{s[i].includes(".")||(t=t.replace(e,""))})),t}function o(t){let e=this.mask;t.split("").forEach((t=>e=e.replace(".",t)));const s=e.includes(".")?e.indexOf("."):null;s&&(e=e.slice(0,s)),this.input.value=e}this.mask=s.join(""),this.input.addEventListener("input",i)}}class TextInputPhone extends TextInput{constructor(t){super(t)}typeNumbersOnly(t){const e=t.target,s=e.value;e.value=s.replace(/[^0-9+()-]/g,"")}}let inputsInittingSelectors=[{selector:".text-input--standard",classInstance:TextInput},{selector:".text-input--phone",classInstance:TextInputPhone}];inittingSelectors=inittingSelectors.concat(inputsInittingSelectors);